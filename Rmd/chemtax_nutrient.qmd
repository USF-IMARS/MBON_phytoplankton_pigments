---
title: "CHEMTAX Data and Environmental Data"
author: "Sebastian Di Geronimo"
date: "2023-10-07"
format: html
---

# 1.0 ---- Summary of Document ----



# 2.0 ---- Setup ----

## 2.1 Load Libraries
```{r setup, include=FALSE}
if (!nzchar(system.file(package = "librarian"))) 
    install.packages("librarian")

librarian::shelf(
    quiet = TRUE,
    librarian, conflicted, ggplot2, tibble, tidyr, readr, purrr, dplyr, stringr,
    forcats, lubridate, glue, fs, magrittr, here,
    # broom # optional
    
    # additional
    
)

conflicts_prefer(
    dplyr::filter(), 
    dplyr::select()
    )
```



## 2.2 Load Dataset


### 2.2.1 CHEMTAX Data

```{r load-data}
dir_data_save <- here("data", "processed", "chemtax_nutrient")
dir_plt_save  <- here("data", "plots", "chemtax_nutrient")

# set season names and order
szn <- c("Winter", "Spring", "Summer", "Autumn")


# ---- CHEMTAX files
cmtx_dat <- 
  here("data", "processed", "chemtax_analysis", "chemtax_w_meta_wide.csv") %>%
  read_csv(show_col_types = FALSE) %>%
  mutate(season = fct_relevel(season, szn)) %T>% print() %>%
  mutate(
    .by = c(cruise_id, station),
    stn_samp = n(),
    .before = station) %>%
    filter(
      .by = c(cruise_id, station),
      min(depth) == depth 
      & depth < 20
    ) %>%
      arrange(-depth) %T>% print()
```


### 2.2.2 NOAA Data

#### 2.2.2.1 NOAA `NA` Strings

These are all the variations of text contained in columns that should be 
numeric. This text will be converted to `NA` when read in using 
`openxlsx::read.xlsx`.


```{r noaa-na-strings}
noaa_bad <- c(
  "NA", "Skip too shallow",
  "97/98", "109/110",
  "113/114", "115/116",
  "117/118", "-",
  " Aboard R/V Savannah", "Lost ",
  "Lost", "Do Not Use (Discrete Chl samples not usable)",
  "Broken Vial", "Missing Vial ",
  "Missed", "Double labeled",
  "Missing", "RE-CAST NOT SAMPLED",
  "Missing ", "NOT COLLECTED",
  "Broken", "Do Not Use (Discrete Chl samples not usable",
  "Sensor bad", "Missing Tube ",
  "Bottles never tripped - recast", "Sensor Drift ",
  "Gain far too high unusable", "Sensor Cut out",
  "Excluded", "Data lost from Acetone Spill",
  "77,78", "79,80",
  "81,82", "Bad analysis",
  "Acidified prior to Fo", "173/174",
  "175/176", "177/178","179/180", "182/183","184/185", "186/187","188/189", 
  "190/191","192/193", "107/108","112/113", "152/153","155/156", "162/163",
  "165/166", "193/194","128, 129", "131, 132","163, 164", "165, 166","167, 168",
  "169, 170","171, 172", "175, 176","158/159", "160/161","164/165", "172/173",
  "174/175", "178/179","180/181", "189/190","7/8", "43/44","51/52", "85/86",
  "89/90", "135/136","138/139", "153/154","170/171", "69,70","71,72", 
  "Unusable", "Spilled"
)
```

#### 2.2.2.2 NOAA `NA` Strings

```{r load-noaa-data}
noaa_data <-
  here("data", "raw") %>%
  dir_ls(regexp = "WSMasterSampleLog") %>%
  str_subset("~", negate = TRUE)

noaa_dat <-
  openxlsx::getSheetNames(noaa_data) %>% 
  str_subset("(?i)all") %>% 
  openxlsx::read.xlsx(
    noaa_data, 
    sheet       = .,
    detectDates = TRUE,
    na.strings  = noaa_bad
  ) %>% 
  janitor::clean_names(replace = c(janitor:::mu_to_u, "#" = "number")) %>% 
  rename(
    "lon" = longitude_decimal,
    "lat" = latitude_decimal) %>%
  mutate(
    .after    = date_gmt,
    time_gmt  = as.numeric(time_gmt),
    time_gmt  = time_gmt + 1,
    time_gmt  = janitor::excel_numeric_to_date(time_gmt, include_time = TRUE),
    time_gmt  = hms::as_hms(time_gmt),
    date_time = ymd_hms(paste(date_gmt, time_gmt))
  ) %>% 
  mutate(
    .by = cruise,
    .after  = time_gmt,
    lon_lag = dplyr::lead(lon),
    lat_lag = dplyr::lead(lat),
    cruise = case_when(
      and(
        str_detect(cruise, "WS18120"),
        between(
          date_gmt, 
          as_date("2018-06-01"), 
          as_date("2018-09-01"))
        ) ~ "WS18218",
      str_detect(cruise, "SAV1803") ~ "SV18067",
      str_detect(cruise, "SAV18173") ~ "SV18173",
      str_detect(cruise, "WS20231") ~ "WS20230",
      .default = cruise),
       # SV18067	= SAV1803			
# SV18173   = SAV18173				
# WS20230   = WS20231 
     station2 = station, 
     station = case_match(
        station,
        c("21/LK", "21.5/LK", "21") ~ "LK",
        .default = station
      )
    ) %>% 
    mutate(
    .by = c(cruise, station),
    stn_samp = n(),
    depth = as.numeric(depth),
    .before = station) %>%
    filter(
      .by = c(cruise, station),
      min(depth) == depth 
      & depth < 20
    ) %>%
      arrange(-depth) %T>% print()

```

```{r merge-chemtax-nutrient}
cmtx_nutr <- 
  left_join(
    cmtx_dat,
    noaa_dat,
    by = c("cruise_id" = "cruise", "station")
  ) %T>% print() 
 
naniar::vis_miss(cmtx_nutr)
```

```{r, fig.width=20, fig.asp=0.8}
cmtx_nutr %>%
  select(
    season, chloro:pras, temperature, salinity, avg_chl_a_ug_l:si_u_m,
    -nutrients_tube_number
  ) %>%
  filter(
    not(
        cyano2 > 2 
      | chloro > 0.4
      | crypto > 0.2
      | diat1 > 0.6
      | diat2 > 0.3)
  ) %>%
  pivot_longer(
    data      = .,
    cols      = c(chloro:pras),
    names_to  = "pft",
    values_to = "conc",
  ) %>%
  nest(.by = c(pft)) %>%
  # nest(.by = c(season, pft)) %>%
  mutate(
    plt = map2(
      pft,
      data,
      (\(.x, .y) {
        .y %>%
          pivot_longer(
            data      = .,
            cols      = c(temperature:si_u_m),  
            names_to  = "env_param",
            values_to = "value", 
            ) %>%
         ggplot(aes(x = conc, y = value, color = season)) +
         # geom_hline(yintercept = 0, color = "grey50", linetype = "dashed") +
         # geom_vline(xintercept = 0, color = "grey50", linetype = "dashed") +
         geom_point(na.rm = TRUE) +
         scale_x_continuous(breaks = scales::pretty_breaks()) +
         labs(title = .x) +
         theme_classic() +
         facet_wrap(~env_param, ncol = 4, scales = "free") +
         theme(panel.grid.major.x = element_line(color = "grey50", linetype = "dashed"))

      })
    )
  ) %>%
  pull(plt)
```

```{r, fig.width=20, fig.asp=0.8}
cmtx_nutr %>%
  select(
    season, chloro:pras, temperature, salinity, avg_chl_a_ug_l:si_u_m,
    -nutrients_tube_number
  ) %>%
  rowwise() %>%
  mutate(
    .before = chloro,
    sums    = sum(c_across(chloro:pras), na.rm = TRUE)
  ) %>%
 ungroup() %>%
 mutate(
   .after = sums,
   across(chloro:pras, \(x) (x / sums))
   ) %>%
  filter(
    not(
        cyano2 > 2 
      | chloro > 0.4
      | crypto > 0.2
      | diat1 > 0.6
      | diat2 > 0.3)
  ) %>%
  pivot_longer(
    data      = .,
    cols      = c(chloro:pras),
    names_to  = "pft",
    values_to = "conc",
  ) %>%
  nest(.by = c(pft)) %>%
  # nest(.by = c(season, pft)) %>%
  mutate(
    plt = map2(
      pft,
      data,
      (\(.x, .y) {
        .y %>%
          pivot_longer(
            data      = .,
            cols      = c(temperature:si_u_m),
            names_to  = "env_param", 
            values_to = "value",
            ) %>%
         ggplot(aes(x = conc, y = value, color = season)) +
         # geom_hline(yintercept = 0, color = "grey50", linetype = "dashed") +
         # geom_vline(xintercept = 0, color = "grey50", linetype = "dashed") +
         geom_point(na.rm = TRUE) +
         scale_x_continuous(breaks = scales::pretty_breaks(),
                            labels = scales::label_percent(0.01)) +
         labs(title = .x) +
         theme_classic() +
         facet_wrap(~env_param, ncol = 4, scales = "free") +
         theme(panel.grid.major.x = element_line(color = "grey50", linetype = "dashed"))

      })
    )
  ) %>%
  pull(plt)
 
```

