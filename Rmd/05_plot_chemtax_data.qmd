---
title: "Plot CHEMTAX Data"
author: "Sebastian Di Geronimo"
date: "2023-09-30"
format: html
---

# 1.0 ---- Summary of Document ----

+ chemtax-data
  - data manipulation

: plotting-chemtax-data
  - hist plots for all PFTs for Florida Keys, colored by season

+ chemtax-add_labels
  - add labels to variable and add missing season for years
  
: chemtax-stacked-bar
  - stacked bar chart for PFT fraction for each stations and separated by season
  
: chemtax-stacked-bar-year-season
  - stacked bar chart for PFT fraction for each stations and separated by year and season

: chemtax-stacked-bar-conc-year-season
  - stacked bar chart for PFT concentration for each stations and separated by year and season
  
: pft-ts-loess
  - plot time series for each PFT concentration
  - separate by PFT and add GAM smoother
  - facets: full time series, day of year avg, month avg
  
: diat-ts-plt
  - plot time series for each PFT concentration
  - separate by PFT and add GAM smoother
  - facets: full time series, day of year avg, month avg
  
: diat-ts
  - data manipulation to compine diatom grp, cyano grp and hapt grp
  - avg conc by station, PFT and date time

: plt-stn-16
  - plot cyano and diat across time
  
+ diat-ts1
  - TODO: needs work
  - linear model
    * dino = season * year
  - kruskal wallis on conc and year grouped by PFT

+ manova
  - dunn test on conc and season/year per PFT
  - MANOVA on PFT community and season
  
+ station-seasonally-yearly-avgs

+ lat-lon-table
  - lat lon table for stations

# 2.0 ---- Setup ----

## 2.1 Load Libraries
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
if (!nzchar(system.file(package = "librarian"))) 
    install.packages("librarian")

librarian::shelf(
    librarian, conflicted, ggplot2, tibble, tidyr, readr, purrr, dplyr, stringr,
    forcats, lubridate, glue, fs, magrittr, here,
    
    # additional
    rlang, ggridges, scales, ggtext, ggthemes,
    rstatix
)

conflicts_prefer(
    dplyr::filter(), 
    dplyr::select()
    )

source(here("scripts", "misc_functions.R"))

theme_set(theme_calc(base_family  = "serif"))

# set color scheme
tol_muted <- 
  c("#88CCEE", "#44AA99", "#117733", "#332288","#DDCC77", "#999933",
    "#CC6677", "#882255", "#AA4499", "#BBBBBB", "#FFAABB")
```

## 2.2 Load Dataset

Load dataset for CHEMTAX analysis

```{r load-data, include=FALSE}
dir_plt_save <- here("data", "plots", "plot_chemtax_data")

dir_create(here(dir_plt_save))

# set season names and order
szn <- c("Winter", "Spring", "Summer", "Autumn")

# load chemtax data in wide format
cmtx_w <-
  here("data", "processed", "chemtax_analysis", "chemtax_w_meta_wide.csv") %>%
  read_csv(show_col_types = FALSE) %>%
  filter(!str_detect(station, "60|21.5|24|^3$|9B|9.5")) %>%
  mutate(
    season = fct(season, levels = szn),
    station = str_replace(station, "9B", "9.5"),
    station = fct_reorder(station, lon)
  ) %>% 
  select(-c(hplc_gsfc_id, cruise:bottle, cluster_code)) %>%
    
  # add PFT concentrations to get total chlorophyll-a
  rowwise() %>%
  mutate(
    total_chl_a = sum(c_across(chloro:pras)),
    .before = chloro
  ) %>%
  ungroup() %>%
  filter(
    .by = c(station, cruise_id),
    depth == min(depth)
    & depth < 20
  ) %T>% print()

# convert to long format
cmtx_l <-
  cmtx_w %>%
  pivot_longer(
    cols      = chloro:last_col(),
    names_to  = "func_type",
    values_to = "conc"
  ) %T>% print()

# ---- phyto full names
phyto_name <-
  tibble(
    names = c(
      "Chlorophyte", "Cryptophyte", "Cyanobacteria 2",
      "Cyanobacteria 4", "Diatom 1", "Diatom 2",
      "Dinoflagellate", "Haptophyte 6", "Haptophyte 8",
      "Prasinophyte"
    )
  ) %>%
  bind_cols(shrt = unique(cmtx_l$func_type)) %>%
    
  # add rows for combined name
  add_row(
    shrt  = c("cyano", "diat", "hapt"),
    names = c("Cyanobacteria", "Diatom", "Haptophyte")
  )

cmtx_l <- 
  left_join(
    cmtx_l,
    phyto_name,
    by = c("func_type" = "shrt")
  )

```



## 2.3 Add: Labels for Season and Year

Format:
- Spring - Autumun is "{season} {year}" 
- Winter: 
  - Dec = "{season} {year}-{year+1}"
  - Jan and Feb = "{season} {year-1}-{year}"
  
When a season and year factor was not sampled at all, added a no data
- Summer 2016
- Winter 2016 - 2017
- Spring 2020 (COVID-19 delays)


```{r chemtax-add_labels}
extra_fct <- 
  c(
    "Summer 2016 (No Data)",
    "Winter 2016-2017 (No Data)", 
    "Spring 2020 (No Data)"
  )
cmtx_l <-
  cmtx_l %>%
  arrange(date_time_utc) %>%
  mutate(
    .after = season,
    season_year = case_when(
      str_detect(season, "Aut|Spr|Sum") ~ glue("{season} {year}"),
      str_detect(month, "Jan|Feb")      ~ glue("{season} {year-1}-{year}"),
      str_detect(month, "Dec")          ~ glue("{season} {year}-{year+1}")),
    
    season_year = fct_inorder(season_year),
    season_year = fct_expand(season_year, extra_fct),
    season_year = fct_relevel(season_year, extra_fct[1], after = 1),
    season_year = fct_relevel(season_year, extra_fct[2], after = 3),
    season_year = fct_relevel(season_year, extra_fct[3], after = 16)
  ) %T>% print()
```



# 3.0 ---- Plot -----

## 3.1 Density and Histogram Plots: PFT 

Density and histogram plot for each PFT per season

```{r plotting-chemtax-data}
plt_cmtx_den_hist <-
  cmtx_l %>%
  nest(.by = func_type) %>%
  filter(!is.na(func_type)) %>%
  mutate(
    hist = map(
      .x = data,
      .y = func_type,
      ~ .x %>%
        ggplot(aes(conc, fill = season)) +
        geom_histogram(
          position = "stack",
          bins = 40,
          na.rm = TRUE
        ) +
        labs(
          title = .x$names,
          x     = "Log<sub>\u0065</sub>([PFT] + 1)",
          y     = "Frequency",
          fill  = "Season"
        ) +
        scale_x_continuous(trans = log1p_trans()) +
        facet_grid(
          rows  = season ~ .,
          scales = "free_x",
        ) +
        theme(
          axis.title.x = element_markdown(margin = margin(t = 20, b = 5))
        )
    ),
    dens = map2(
      .x = data,
      .y = func_type,
      ~ .x %>%
        ggplot(aes(conc, y = season, fill = season)) +
        geom_density_ridges(
          na.rm = TRUE,
          alpha = 0.25
        ) +
        labs(
          title = .x$names,
          x     = "Log<sub>\u0065</sub>([PFT] + 1)",
          y     = "Frequency",
          fill  = "Season"
        ) +
        scale_x_continuous(trans = log1p_trans()) +
        theme(
          axis.title.x = 
            element_markdown(margin = margin(t = 20, b = 5))
        )
      
    )
  )

plt_cmtx_den_hist$dens
plt_cmtx_den_hist$hist
```

## 3.2 Bar Plot: PFT per **Season** and **Station** as Stacked Percent

```{r chemtax-stacked-bar}
# CHEMTAX stacked bar graph
cmtx_l %>%
  filter(!is.na(conc)) %>%
  summarise(
  .by = c(station, season, func_type, names),
  conc = mean(conc)
  ) %>%
  mutate(
    names = fct_reorder(names, conc, .desc = TRUE)
  ) %>%
  ggplot(
    aes(
      x     = station,
      y     = conc,
      fill  = names,
      # color = names
    )
  ) +
  geom_bar(
    color = "black",
    position = "fill",
    stat = "identity",
    na.rm = TRUE,
    linewidth = 0.5
  ) +
  labs(
    x     = "Station",
    y     = "Percent (%)",
    fill  = "Phytoplankton Functional Type",
    color = "Phytoplankton Functional Type"
  ) +
  scale_y_continuous(
    labels = label_percent(),
    expand = c(0, 0)
  ) +
  scale_fill_manual(values = tol_muted) +
  facet_wrap(~season)

# ---- save plot
save_gg(
  plt            = last_plot(), # edit if want specific plot
  save_location  = dir_plt_save,
  save_name      = "pft_bar_percent_season",
  verbose        = TRUE,
  overwrite      = FALSE,
  # overwrite      = TRUE,
  time_stamp_fmt = "%Y%m%d_%H%M%S",
  device         = "jpeg",
  height         = 9.7,
  width          = 19,
  dpi            = 600,
  units          = "in",
  bg             = "white"
  )
```


## 3.3 Plot: Bar Plot: PFT per **Season** and **Year** as Stacked Percent

```{r chemtax-stacked-bar-year-season}
# CHEMTAX stacked bar graph with ratio to chlor-a, organized by station
cmtx_l %>%
  # mutate(station = fct_reorder(station, lon, .na_rm = FALSE)) %>%
  # filter(!is.na(station))
  ggplot(
    aes(
      y     = conc,
      x     = station,
      fill  = names,
      color = names
    )
  ) +
  geom_bar(
    position = "fill",
    stat     = "identity",
    na.rm    = TRUE
  ) +
  labs(
    x     = "Station",
    y     = "Relative Ratio",
    fill  = "Phytoplankton Functional Type",
    color = "Phytoplankton Functional Type"
  ) +
  scale_fill_manual(values = tol_muted) +
  scale_color_manual(values = tol_muted) +
  scale_y_continuous(
    labels = label_percent(),
    expand = c(0, 0)
  ) +
  facet_wrap(~season_year, ncol = 4, drop = FALSE) +

  # theme
  theme(
    axis.title       = element_text(size = 18),
    legend.position  = c(0.6, 0.05),
    legend.direction = "horizontal"
  )

# ---- save plot
save_gg(
  plt            = last_plot(), # edit if want specific plot
  save_location  = dir_plt_save,
  save_name      = "pft_bar_percent_season_year",
  verbose        = TRUE,
  overwrite      = FALSE,
  time_stamp_fmt = "%Y%m%d_%H%M%S",
  device         = "jpeg",
  height         = 9.7,
  width          = 19,
  dpi            = 600,
  units          = "in",
  bg             = "white"
  )


```


## 3.4 Plot: Bar Plot: PFT per **Season** and **Year** as Absolute VAr

```{r chemtax-stacked-bar-conc-year-season}
# chemtax stacked bar graph (not ratio), organized by station
cmtx_l %>%
  summarize(
    conc = mean(conc, na.rm = TRUE),
    .by  = c(season_year, station, func_type)
  ) %>%
  ggplot(aes(
    fill  = func_type,
    color = func_type,
    y     = conc,
    x     = station
  )) +
  geom_bar(stat = "identity") +
  labs(
    x     = "Station",
    y     = "Concentration of Chlorophyll-a (mg m<sup>-3</sup>)",
    fill  = "Phytoplankton Functional Type",
    color = "Phytoplankton Functional Type"
  ) +
  scale_fill_manual(values  = tol_muted) +
  scale_color_manual(values = tol_muted) +
  scale_y_continuous(expand = c(0, 0)) +
  facet_wrap(~season_year, ncol = 4, drop = FALSE) +

  # theme
  theme(
    axis.title.y     = element_markdown(),
    legend.position  = c(0.6, 0.05),
    legend.direction = "horizontal"
  )


# ---- save plot
save_gg(
  plt            = last_plot(), # edit if want specific plot
  save_location  = dir_plt_save,
  save_name      = "pft_bar_absolute_season_year",
  verbose        = TRUE,
  overwrite      = FALSE,
  time_stamp_fmt = "%Y%m%d_%H%M%S",
  device         = "jpeg",
  height         = 9.7,
  width          = 19,
  dpi            = 600,
  units          = "in",
  bg             = "white"
  )


```
# 4.0 Timeseries Plots

## 4.1 *WIP* Line Plot: Timesseries PFT with LOESS Smoother

This was an attempt to see if a smoother could show seasonal trends for each
PFT.

The 3 plots:
- for all y = concentration, facet = PFT
  1. entire series, x = datetime
  2. day of year, x = doy
  3. month, x = month

```{r pft-ts-loess, fig.width=30, fig.height=15}
# base plot list
plt_fun <-
  list(
    aes(
      y     = conc_ratio,
      color = names
    ),
    geom_point(
      show.legend = FALSE, ,
      na.rm       = TRUE
    ),
    # geom_smooth(
    #   formula     = y ~ s(x),
    #   method      = "gam",
    #   se          = FALSE,
    #   show.legend = FALSE
    # ),
    geom_smooth(
      formula     = y ~ x,
      method      = "loess",
      span        = 0.3,
      se          = FALSE,
      show.legend = FALSE,
      na.rm       = TRUE
    ),
    labs(
      x = NULL,
      y = "Pigment:Chlorophyll-a",
      color = NULL
    ),
    scale_y_continuous(expand = c(0, 0)),
    scale_color_brewer(palette = "Paired"),
    facet_grid(names ~ .,
      # scales = "free_y"
      scales = "fixed"
    )
  )


# point plot with smoothing line for 1 functional group, colored by season
plt_smooth <-
  cmtx_l %>%
  mutate(conc_ratio = conc / total_chl_a) %>%
  filter(!is.na(conc_ratio)) %>%
  ggplot() +
  plt_fun


# combine the three versions
shelf(patchwork)
(plt_smooth +
  aes(x = date_time_utc) +
        labs(x = "Date")
    ) +
  (plt_smooth +
    aes(x = yday(date_time_utc)) +
    labs(y = NULL,
         x = "Day of Year")
   ) +
  (plt_smooth +
    aes(x = month(date_time_utc)) +
    labs(y = NULL,
         x = "Month")
   ) 
```


```{r, fig.width=40, fig.asp=0.5}
cmtx_l %>%
  mutate(
    conc_ratio = conc / total_chl_a,
    names2 = names
  ) %>%
  filter(
    .by = c(station, names),
    n() > 3,
    !is.na(conc_ratio)
  ) %>%
  nest(.by = names2) %>%
  # slice(1) %>%

  mutate(
    plt =
      map2(
        data,
        names2,
        ~ ggplot(
          .x,
          aes(
            x     = date_time_utc,
            y     = conc,
          )
          ) +
          geom_hline(yintercept = 0, color = "red", alpha = 0.2) +
          geom_smooth(
            color       = "grey70",
            alpha       = 0.5,
            formula     = y ~ s(x, bs = "tp", k = 10),
            method      = "gam",
            se          = FALSE,
            show.legend = FALSE,
            na.rm       = TRUE
          ) +
          geom_smooth(
            color       = "grey70",
            alpha       = 0.5,
            linetype    = "dashed",
            formula     = y ~ x,
            method      = "loess",
            span        = 0.3,
            se          = FALSE,
            show.legend = FALSE,
            na.rm       = TRUE
          ) +
          geom_smooth(
           aes(y = total_chl_a),
            color       = "red",
            alpha       = 0.8,
            linetype    = "dashed",
            formula     = y ~ x,
            method      = "loess",
            span        = 0.3,
            se          = FALSE,
            show.legend = FALSE,
            na.rm       = TRUE
          ) +
          geom_point(
            aes(y = total_chl_a),
            fill = "red",
            size = 3,
            shape = 24,
            na.rm = TRUE
          ) +
          geom_point(
            aes(fill = season),
            shape = 23,
            size  = 4,
            na.rm = TRUE
          ) +
          labs(title = .y) +
          scale_x_datetime(
            date_labels = "%Y",
            breaks = "1 year",
            minor_breaks = "3 months"
          ) +
          scale_y_continuous(
            expand = c(0, 0),
            limits = c(0, NA),
            breaks = seq(0.0, 1, 0.1),
            minor_breaks = seq(0.05, 1, 0.15)
          ) +
          facet_wrap(
            station ~ .,
            ncol   = 4,
            scales = "fixed"
          ) +
          coord_cartesian(ylim = c(0, 1)) +
          theme(
            panel.grid.major.x = element_line(color = "grey", linewidth = 0.5),
            panel.grid.minor = element_line(color = "grey", linewidth = 0.2,
                                              linetype = "dashed")
            )
      )
  ) %>%
  pull(plt)
```
What trends are visible?

Choloro
- range 0 - 15% of total chl-a, average ~5 - 7%
- cyclic pattern
- station WS and LK have peaks in Spring and Winter
  - lowest in Autumn
  
Crypto
- most stations 0 - 10% of total chl-a
- station 16 has largest range from 0 - 45% of total chl-a
  - nearer shore, near channel to West Florida Shelf
- no clear seasonal trend  


Cyano2
- range 0 - 50% of total chl-a
- always above 10% of total chl-a
- no clear trend
- potential bloom in station 16 in winter 2019 with chloro and diat2

Cyano 4 (prochlorococcus)
- station 16, 7, and 10 were lowest, with 0 - 5% of total chl-a
  - station 16 especially low for most of it with one spike in winter 2019
  - station 7 had more variabiliy with peaks ~8% in autumn and spring
- all other stations had 5 - 30% of total chl-a
- WS and LK seem to share similar trend
- MR

Diat 1 
- potential bloom in station 16 in winter 2018 autumn

```{r, fig.width=40, fig.asp=0.5}
cmtx_l %>%
  mutate(
    conc_ratio = conc / total_chl_a,
    names2 = names
  ) %>%
  filter(
    .by = c(station, names),
    n() > 3,
    !is.na(conc_ratio)
  ) %>%
  nest(.by = station) %>%
  # slice(1) %>%

  mutate(
    plt =
      map2(
        data,
        station,
        \(.x, .y) {    
            
        sec <- ggh4x::help_secondary(
            .x,
            primary   = c(0, 1), 
            secondary = total_chl_a,
            method = "range",
            name = "Total Chlor a"
            )
            
        plts <-     
        ggplot(
          .x,
          aes(
            x = date_time_utc,
            y = conc_ratio
          )
          ) +
          geom_hline(yintercept = c(0, 0.5), color = "red", alpha = 0.2) +
          # geom_hline(
          #     aes(yintercept = ave(conc_ratio, names, FUN = range),
          #                        
          #         color = names), 
          #     alpha = 0.8,
          #     linetype = "dashed",
          #     show.legend = FALSE
          #     ) +
          geom_point(
            # aes(y = total_chl_a),
            aes(y = sec$proj(total_chl_a)),
            fill = "grey50",
            alpha = 0.5,
            size = 3,
            shape = 24,
            na.rm = TRUE
          ) +
          geom_line(
            # aes(y = total_chl_a),
            aes(y = sec$proj(total_chl_a)),
            # fill = "grey50",
            color = "grey40",
            alpha = 0.5,
            linetype = "twodash",
            # size = 3,
            # shape = 24,
            na.rm = TRUE
          ) +
          # geom_smooth(
          #  # aes(y = total_chl_a),
          #   aes(y = sec$proj(total_chl_a)),
          #   color       = "grey50",
          #   alpha       = 0.5,
          #   linetype    = "dashed",
          #   formula     = y ~ x,
          #   method      = "loess",
          #   span        = 0.3,
          #   se          = FALSE,
          #   show.legend = FALSE,
          #   na.rm       = TRUE
          # ) +
          geom_smooth(
            color       = "grey70",
            alpha       = 0.5,
            formula     = y ~ s(x, bs = "tp", k = 10),
            method      = "gam",
            se          = FALSE,
            show.legend = FALSE,
            na.rm       = TRUE
          ) +
          # geom_smooth(
          #   color       = "grey70",
          #   alpha       = 0.5,
          #   # linetype    = "dashed",
          #   formula     = y ~ x,
          #   method      = "loess",
          #   span        = 0.3,
          #   se          = FALSE,
          #   show.legend = FALSE,
          #   na.rm       = TRUE
          # ) +
          geom_point(
            aes(fill = season),
            shape = 23,
            size  = 4,
            na.rm = TRUE
          ) +
          geom_line(
            na.rm = TRUE
          ) +
          labs(title = .y) +
          scale_y_continuous(
            expand = c(0, 0),
            limits = c(0, NA),
            breaks = seq(0.0, 1, 0.1),
            minor_breaks = seq(0.05, 1, 0.1),
            sec.axis = sec
          ) +  
          scale_x_datetime(
            date_labels = "%Y",
            breaks = "1 year",
            # minor_breaks = "6 months"
          ) +
          facet_wrap(
            names ~ .,
            ncol   = 4,
            scales = "fixed"
          ) +
          # coord_cartesian(ylim = c(0, 1)) +
          theme(
            panel.grid.major.x = element_line(color = "grey80", linewidth = 0.5),
            panel.grid.minor = element_line(color = "grey80", linewidth = 0.4,
                                              # linetype = ""
                                            )
            )
        
        # plotly::ggplotly(plts)
        }
      )
  ) %>%
    # slice(1:3) %>%
  pull(plt)


```
What trends are visible?

MR
- cyano2 has largest variability from 10 - 60% of total chl-a
  - early autumn tends to be higher then later autumn (Sep - Nov)
  - maximal usually in Summer (Jun - Aug)
  - depths are pretty close except spring and summer 2019 
- cyano4 is close second with 10 - 30% of total chl-a
  - tends to peak in Autumn 
- Hapto6 consistently 5 - 20% of total chl-a with peaks in Autumn
  - mostly around 10% of total chl-a for most seasons
- hapt8 is usually 7 - 15% of total chl-a
  - highest in winter 2018 - 2019 and 2020 - 2021 >17% of total chl-a
- chloro  tend to between 0 - 10% of total chl-a
  - peaks in winter then decreases towards 0% for the rest of the year
  - seems like boom and bust cycles
- crypto never exceed 10% of total chl-a with similar peaks in winter
  - spring and summer tend to be below 5% of total chl-a
- pras tends to be between 0 - 15%
  - some peaks in autumn, but seems to be fairly similar each season around 5%
- diat1, diat2 and dino all tend to have <5% of total chl-a
  - diat1 only peak during bloom in winter 2019 at ~7%
  - diat2 has 3 peaks >=10%  during summer 2018, winter and summer 2019  
    - seems to be during overall chl-a peaks

7 
- cyano2 
  - similar to MR, largest contribution of 20 - 45% of total chl-a
  - peak in autumn 2017 with high chl-a (0.85) 
- cyano4 
  - much lower than MR, with 0 - 10% of total chl-a
  - typically lower than 5% of total chl-a
- chloro and crypto
  - have similar pattern and percents of 5 - 15%
- hapt8 and pras 
  - lower than 10% of total chl-a
- diat1 and diat2
  - usually max ~20% but not at the same time
  - diat1 lowest summer 1019 to summer 2020 while diat2 is consistent 5 - 20%
- dino 
  - tend to be low 5 - 10% of total chl-a
  - summer has small peaks
- hapt6
  - similar to dino with 5 - 20% of total chl-a
  - peaks tend to be in spring with lowest in summer

12
- offshore station
- cyano2 
  - typically highest overall with 20 - 55% of total chl-a
  - lowest in winters with peaks in spring - summer
  - high chlo-a looks to be inverted
- cyano4
  - ranges 5 - 40% of total chl-a
  - has peaks in autumn with lows during summer
- diat1, diat2 and dino
  - practically non existent with <5% of total chl-a
- hapt6 and hapt8
  - have similar contributions 0f 5 - 20% of total chl-a
  - follow similar patterns but hapt6 lags behind hapt8 in terms of peaks
- pras
  - mostly 0 - 10% of total chl-a
  - no consistent pattern
- chloro 
  - seems to have lowest in autumn and highest in winter - spring

10
- nearshore station
- cyano2 
  - still highest contributor with 15 - 45% of total chl-a
  - a bloom seems possible in winter 2019 with ~80% of total chl-a
  - seems like early season is lower with later season is higher?
- cyano2
  - very low compared to the other stations <5% for the most part
- chloro
  - between 5 - 10% of total chl-a
  - two low points between summer and autumn of 2019
- 

16
- nearshore station

18
- offshore station

LK



WS

```{r, fig.width=40, fig.asp=0.5}
cmtx_l %>%
  mutate(
    conc_ratio = conc / total_chl_a,
    names2 = names,
    names = fct_reorder(
      names,
      conc_ratio,
      .fun  = median,
      .desc = TRUE
    )
  ) %>%
  filter(
    .by = c(station, names),
    n() > 3,
    !is.na(conc_ratio)
  ) %>%
  nest(.by = station) %>%
  # slice(1) %>%

  mutate(
    plt =
      map2(
        data,
        station,
        \(.x, .y) {    
            
        sec <- ggh4x::help_secondary(
            .x,
            primary   = c(0, 1), 
            secondary = total_chl_a,
            method = "range",
            name = "Total Chlor a"
            )
        
        .x %>%
        # mutate(
        #   names = fct_reorder(
        #       names, 
        #       conc_ratio, 
        #       .fun = median, 
        #       .desc = TRUE)
        #   ) %>%
        
        ggplot(
         .,
         aes(
           x = date_time_utc,
           y = conc_ratio, fill = names
         )
       ) +
        geom_area(alpha = 0.6, linewidth = 1, colour = "black")   +
        ggnewscale::new_scale_fill() +
        ggnewscale::new_scale_color() +
          # geom_vline(aes(xintercept = date_time_utc)) +
          geom_line(
            aes(y = sec$proj(total_chl_a)),
            color = "firebrick1",
            alpha = 0.5,
            # linetype = "twodash",
            na.rm = TRUE
          ) +
          geom_point(
            aes(
              y = sec$proj(total_chl_a), 
              color = season, 
              fill  = season, 
              shape = season
              ),
            # fill = "grey50",
            alpha = 0.5,
            size = 5,
            # shape = 24,
            na.rm = TRUE
          ) +
          # geom_smooth(
          #   color       = "grey70",
          #   alpha       = 0.5,
          #   formula     = y ~ s(x, bs = "tp", k = 10),
          #   method      = "gam",
          #   se          = FALSE,
          #   show.legend = FALSE,
          #   na.rm       = TRUE
          # ) +
          # geom_point(
          #   aes(fill = names),
          #   shape = 23,
          #   size  = 4,
          #   na.rm = TRUE
          # ) +
          # geom_line(
          #     aes(color = names),
          #   na.rm = TRUE
          # ) +
          # geom_area(
          #   aes(fill = names),
          #   alpha = 0.6, linetype = 1, colour = "black")
          
          labs(title = .y) +
          scale_y_continuous(
            expand = c(0, 0),
            limits = c(0, NA),
            breaks = seq(0.0, 1, 0.1),
            minor_breaks = seq(0.05, 1, 0.1),
            sec.axis = sec
          ) +
          scale_x_datetime(
            date_labels = "%Y",
            breaks = "1 year",
          ) +
             facet_wrap(
            names ~ .,
            ncol   = 4,
            scales = "fixed"
          ) +
          theme(
            panel.grid.major.x = element_line(color = "grey80", linewidth = 0.5),
            panel.grid.minor = element_line(color = "grey80", linewidth = 0.4,
                                              # linetype = ""
                                            )
            )
        }
      )
  ) %>%
    # slice(1) %>%
  pull(plt) #-> test
    # save_gg(
    #     plt = last_plot(), 
    #     save_location  = here(),
    #     save_name      = "test",
    #     overwrite      = T,
    #     verbose        = TRUE,
    #     time_stamp_fmt = NULL,
    #     device         = "jpeg",
    #     width = 18.27, height = 11.51, dpi = 300
    # )
```
- cyano4 and hapt8 are low nearshore
- crypto only explode at station 16
- diat2 lowest off shore
  - highest near shore (16, 10, 7)
- dino and diat1
  - sames as diat2

# 5.0 *WIP* MANOVA


```{r manova}
cmtx_dunn2 <-
  cmtx_l %>%
  group_by(func_type) %>%
  dunn_test(
    conc ~ season_year,
    p.adjust.method = "bonferroni",
    detailed = TRUE
  ) %>%
  mutate(
    p     = num(p, digits = 3),
    p.adj = num(p.adj, digits = 3),
  ) %>%
  nest(.by = func_type) %$%
  walk2(
    .x = func_type,
    .y = data,
    (\(x, y) mutate(y,
      func_type = x,
      .before = 1
    ) %>%
      filter(p < 0.1) %>%
      print())
  )


# MANOVA test
cmtx_man <- 
  cmtx_w %>%
  select(chloro:last_col()) %>%
  as.matrix() 

manova(cmtx_man ~ season, data = cmtx_w) %>%
    summary()

cmtx_w %>%
  mutate(season_year = str_c(season, year(date_time_utc), sep = " "),
         .before = 2) %>%
  manova(cmtx_man ~ season_year, data = .) %>%
  summary()
```






```{r station-seasonally-yearly-avgs}
cmtx_w_new <-
  cmtx_w %>%
  mutate(
    diat  = diat1 + diat2,
    cyano = cyano2 + cyano4,
    hapt  = hapt6 + hapt8,
    total = chloro + crypto + diat + dino + hapt + pras + cyano
  )

cmtx_stat <-
  cmtx_w_new %>%
  summarise(
    across(
      chloro:hapt,
      list(
        avg = (\(x) mean(x, na.rm = TRUE)),
        sd  = (\(x) sd(x,   na.rm = TRUE)),
        var = (\(x) var(x,  na.rm = TRUE))
      )
    ),
    .by = c(year, season, station)
  )

cmtx_fract <-
  cmtx_w_new %>%
  mutate(
    season,
    station,
    across(chloro:hapt, ~ .x / total, .names = "frac_{.col}")
  ) %>%
  select(date_time_utc:season, frac_chloro:frac_pras) %>%
  pivot_longer(
    frac_chloro:frac_pras,
    names_to     = "func_type",
    values_to    = "frac",
    names_prefix = "frac_"
  )

max_fract <-
  cmtx_fract %>%
  summarise(
    max_frac = max(frac),
    .by = sample
  ) %>%
  left_join(cmtx_fract,
    by = c("max_frac" = "frac")
  )
```



